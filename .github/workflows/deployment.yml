on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'

permissions:
  contents: read

jobs:
  build-lambdas:
    name: 'Create or Update Amazon ECR'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  
      - name: Build lambda
        run: |
          npm i
          npm i -g serverless@3
          serverless package

  terraform-infra:
    name: 'Create or Update Amazon ECR'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/infra
    env:
      TF_VAR_name: ${{ vars.PROJECT_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: ls && terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -input=false
        # env:
        #   TF_VAR_ecr_registry: ${{ steps.login-ecr.outputs.registry }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

  terraform-ecs:
    name: 'Deploy ECS in Amazon'
    runs-on: ubuntu-latest
    needs: terraform-infra
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/lambda
    env:
      TF_VAR_ecr_tag: ${{ github.sha }}
      TF_VAR_ecr_repository: ${{ vars.PROJECT_NAME }}
      TF_VAR_name: ${{ vars.PROJECT_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: ls && terraform init
        env:
          TF_VAR_ecr_registry: ${{ steps.login-ecr.outputs.registry }}=

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -input=false
        env:
          TF_VAR_ecr_registry: ${{ steps.login-ecr.outputs.registry }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        env:
          TF_VAR_ecr_registry: ${{ steps.login-ecr.outputs.registry }}
